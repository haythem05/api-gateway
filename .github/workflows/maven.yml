name: Build and Push API Gateway Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR (skip tests)
        run: mvn clean package -DskipTests
  
  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install .NET 6 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Build app to generate dependencies
        run: mvn clean package -DskipTests

      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.2/dependency-check-8.4.2-release.zip
          unzip dependency-check-8.4.2-release.zip -d dependency-check

      - name: Run OWASP Dependency-Check (target only)
        run: |
          ./dependency-check/dependency-check/bin/dependency-check.sh \
            --project "api-gateway" \
            --scan target \
            --format "JSON" \
            --out dependency-check-report \
            
      

      - name: Upload JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report/dependency-check-report.json
  dockerpush:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: dependency-check  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t haythemloueti/api-gateway:1.0 .

      - name: Push to Docker Hub
        run: docker push haythemloueti/api-gateway:1.0
  trivy_scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: dockerpush

    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name:  Run Trivy Scan 
        run: |
          trivy image \
            --exit-code 1 \
            --severity CRITICAL \
            --ignore-unfixed \
            --format table \
            ${{ secrets.DOCKER_HUB_USERNAME }}/api-gateway:1.0
      - name:   Save Trivy JSON Report
        run: |
          trivy image \
            --format json \
            --ignore-unfixed \
            --output trivy-report.json \
            ${{ secrets.DOCKER_HUB_USERNAME }}/api-gateway:1.0

      - name: Upload Trivy Report 
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

